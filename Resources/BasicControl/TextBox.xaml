<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mywpf="http://schemas.mywpf.com/wpf/xaml/toolkit"
                    xmlns:controls="clr-namespace:MyWPFUI.Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/MyWPFUI;component/Resources/Colors/DefaultColorBrush.xaml"></ResourceDictionary>

    </ResourceDictionary.MergedDictionaries>
    <!--文本操作右键菜单-->
    <ContextMenu x:Key="TextBoxContextMenu" Style="{StaticResource {x:Type ContextMenu}}">
        <MenuItem Command="ApplicationCommands.Cut" Icon="&#xe662;"  />
        <MenuItem Command="ApplicationCommands.Copy" Icon="&#xe661;" />
        <MenuItem Command="ApplicationCommands.Paste" Icon="&#xe663;"  />
    </ContextMenu>
    <Style  TargetType="{x:Type TextBox}">
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}"></Setter>
        <Setter Property="controls:TextDigitalHelper.Units" Value="2"></Setter>
        <Setter Property="controls:TextDigitalHelper.Count" Value="20"></Setter>
        <Setter Property="controls:ControlAttachPropertyHepler.MouseOverBorderBrush" Value="{StaticResource FocusBorderBrush}"></Setter>
        <Setter Property="controls:ControlAttachPropertyHepler.FocusBorderBrush" Value="{StaticResource FocusBorderBrush}"></Setter>
        <Setter Property="controls:ControlAttachPropertyHepler.FocusBorderShadowColor" Value="#0AFF00"></Setter>
        <Setter Property="VerticalAlignment" Value="Stretch"></Setter>
        <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="Padding" Value="2,0,2,0"></Setter>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="ContextMenu" Value="{StaticResource TextBoxContextMenu}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                        <Grid x:Name="PART_InnerGrid" Margin="0,0,1,1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition  Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition  Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Border x:Name="BD" Grid.ColumnSpan="3" Background="{TemplateBinding Background}" >

                            </Border>
                            <!--左侧区域-->
                            <ContentControl x:Name="leftct" Margin="0" Content="{TemplateBinding controls:ControlAttachPropertyHepler.LeftContent}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <!--内容区域-->
                            <ScrollViewer x:Name="PART_ContentHost"  Grid.Column="1" SnapsToDevicePixels="True"
                                          VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Padding="0"
                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                      HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}" VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}"  />
                            <!--水印-->
                            <TextBlock x:Name="Message"  Padding="0" Visibility="Collapsed"
                                       Text="{TemplateBinding controls:ControlAttachPropertyHepler.Watermark}" Grid.Column="1"
                                       Foreground="{TemplateBinding Foreground}" IsHitTestVisible="False" Opacity="0.8"
                                         Margin="{TemplateBinding Padding}" 
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"  />
                            <!--右侧区域内容区域-->
                            <ContentPresenter x:Name="rightct" Grid.Column="2" Content="{TemplateBinding controls:ControlAttachPropertyHepler.RightContent}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="Right"
                                              Tag="{Binding RelativeSource={RelativeSource AncestorType=TextBox}}"
                                              TextElement.Foreground="{TemplateBinding Foreground}" TextElement.FontSize="{TemplateBinding FontSize}" />

                        </Grid>

                    </Border>

                    <ControlTemplate.Triggers>
                        <!--显示水印-->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="">
                            <Setter TargetName="Message" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="Message" Property="Visibility" Value="Visible"/>
                                <Condition Property="IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" Value="0.5" TargetName="Message"></Setter>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{Binding Path=(controls:ControlAttachPropertyHepler.MouseOverBorderBrush),RelativeSource={RelativeSource Self}}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter  Property="BorderBrush" Value="{Binding Path=(controls:ControlAttachPropertyHepler.FocusBorderBrush),RelativeSource={RelativeSource Self}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <!--<Setter Property="Background" Value="{StaticResource DisabledBaseBrush}" TargetName="border"/>-->
                            <Setter Property="BorderBrush" Value="{StaticResource DisabledBaseBrush}" TargetName="border"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBaseBrush}"/>
                            <Setter Property="TextBlock.TextTrimming" Value="WordEllipsis"></Setter>
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <!--<Setter Property="Background" Value="Transparent" TargetName="border"/>
                            <Setter Property="BorderThickness" Value="0" TargetName="border"/>-->
                            <Setter Property="TextBlock.TextTrimming" Value="WordEllipsis"></Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="IBeam"></Setter>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocusWithin" Value="True"></Condition>
                                <Condition Property="IsReadOnly" Value="false"></Condition>
                                <Condition Property="IsEnabled" Value="true"></Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{Binding Path=(controls:ControlAttachPropertyHepler.FocusBorderBrush),RelativeSource={RelativeSource Self}}"></Setter>
                            <Setter TargetName="BD" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="20" ShadowDepth="0" Direction="0" Opacity="0.3" Color="{StaticResource FocusBorderColor}"/>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsVisible" Value="False">
                <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>