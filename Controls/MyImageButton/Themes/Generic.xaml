<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:control="clr-namespace:MyWPFUI.Controls">
    <Style x:Key="{x:Type control:MyImageButton}"  TargetType="{x:Type control:MyImageButton}">
        <Style.Resources>
            <ControlTemplate x:Key="MyImageButton.HorizonFour" TargetType="{x:Type control:MyImageButton}">
                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" UseLayoutRounding="True" RenderOptions.BitmapScalingMode="NearestNeighbor" >
                    <Border.Background>
                        <ImageBrush ImageSource="{Binding Path=Icon, RelativeSource={RelativeSource TemplatedParent}}" Viewbox="0,0 0.25,1" RenderOptions.BitmapScalingMode="NearestNeighbor"/>
                    </Border.Background>
                    <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsDefaulted" Value="true">
                        <Setter Property="Background" TargetName="border">
                            <Setter.Value>
                                <ImageBrush ImageSource="{Binding Path=Icon, RelativeSource={RelativeSource TemplatedParent}}"  Viewbox="0,0 0.25,1" RenderOptions.BitmapScalingMode="NearestNeighbor" RenderOptions.ClearTypeHint="Enabled"/>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Background" TargetName="border">
                            <Setter.Value>
                                <ImageBrush ImageSource="{Binding Path=Icon, RelativeSource={RelativeSource TemplatedParent}}"  Viewbox="0.25,0 0.25,1" RenderOptions.BitmapScalingMode="NearestNeighbor"/>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="true">
                        <Setter Property="Background" TargetName="border">
                            <Setter.Value>
                                <ImageBrush ImageSource="{Binding Path=Icon, RelativeSource={RelativeSource TemplatedParent}}"  Viewbox="0.5,0 0.25,1" RenderOptions.BitmapScalingMode="NearestNeighbor"/>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Background" TargetName="border">
                            <Setter.Value>
                                <ImageBrush ImageSource="{Binding Path=Icon, RelativeSource={RelativeSource TemplatedParent}}" Viewbox="0.75,0 0.25,1" RenderOptions.BitmapScalingMode="NearestNeighbor"/>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="MyImageButton.VerticalFour" TargetType="{x:Type control:MyImageButton}">
                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" >
                    <Border.Background>
                        <ImageBrush ImageSource="{Binding Path=Icon, RelativeSource={RelativeSource TemplatedParent}}" Stretch="Uniform" Viewbox="0,0 1,0.25"/>
                    </Border.Background>
                    <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsDefaulted" Value="true">
                        <Setter Property="Background" TargetName="border">
                            <Setter.Value>
                                <ImageBrush ImageSource="{Binding Path=Icon, RelativeSource={RelativeSource TemplatedParent}}" Stretch="Uniform" Viewbox="0,0 1,0.25"/>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Background" TargetName="border">
                            <Setter.Value>
                                <ImageBrush ImageSource="{Binding Path=Icon, RelativeSource={RelativeSource TemplatedParent}}" Stretch="Uniform" Viewbox="0,0.25 1,0.25"/>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="true">
                        <Setter Property="Background" TargetName="border">
                            <Setter.Value>
                                <ImageBrush ImageSource="{Binding Path=Icon, RelativeSource={RelativeSource TemplatedParent}}" Stretch="Uniform" Viewbox="0,0.5 1,0.25"/>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Background" TargetName="border">
                            <Setter.Value>
                                <ImageBrush ImageSource="{Binding Path=Icon, RelativeSource={RelativeSource TemplatedParent}}" Stretch="Uniform" Viewbox="0,0.75 1,0.25"/>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="MyImageButton.ContentOpacity" TargetType="{x:Type control:MyImageButton}">
                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" >
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualStateGroup.Transitions>
                                <VisualTransition GeneratedDuration="0:0:0.2">
                                </VisualTransition>
                            </VisualStateGroup.Transitions>
                            <VisualState x:Name="Normal">
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>

                            <VisualState x:Name="MouseOver">
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0.6"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Pressed">
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>

                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Grid>
                        <Image Source="{Binding Path=Icon, RelativeSource={RelativeSource TemplatedParent}}" Stretch="Uniform"  VerticalAlignment="Top" HorizontalAlignment="Center" SnapsToDevicePixels="True" UseLayoutRounding="True" RenderOptions.BitmapScalingMode="NearestNeighbor"/>

                        <ContentPresenter Opacity="1" x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Opacity" TargetName="border" Value="0.5">
                        </Setter>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="MyImageButton.Manner" TargetType="{x:Type control:MyImageButton}">
                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" >
                    <Grid>
                        <Image x:Name="icon" Source="{Binding Path=Icon, RelativeSource={RelativeSource TemplatedParent}}" Stretch="Uniform"  VerticalAlignment="Center" HorizontalAlignment="Center" RenderOptions.BitmapScalingMode="NearestNeighbor" SnapsToDevicePixels="True" UseLayoutRounding="True"/>
                        <Image x:Name="hicon" Visibility="Collapsed"  Source="{Binding Path=HoverIcon, RelativeSource={RelativeSource TemplatedParent}}" Stretch="Uniform"  VerticalAlignment="Center" HorizontalAlignment="Center" RenderOptions.BitmapScalingMode="NearestNeighbor" SnapsToDevicePixels="True" UseLayoutRounding="True"/>
                        <Image x:Name="picon" Visibility="Collapsed" Source="{Binding Path=PressedIcon, RelativeSource={RelativeSource TemplatedParent}}" Stretch="Uniform"  VerticalAlignment="Center" HorizontalAlignment="Center" RenderOptions.BitmapScalingMode="NearestNeighbor" SnapsToDevicePixels="True" UseLayoutRounding="True"/>
                        <Image x:Name="dicon" Visibility="Collapsed" Source="{Binding Path=DisabledIcon, RelativeSource={RelativeSource TemplatedParent}}" Stretch="Uniform"  VerticalAlignment="Center" HorizontalAlignment="Center" RenderOptions.BitmapScalingMode="NearestNeighbor" SnapsToDevicePixels="True" UseLayoutRounding="True"/>
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter TargetName="icon" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="hicon" Property="Visibility" Value="Collapsed"/>
                        <Setter TargetName="picon" Property="Visibility" Value="Collapsed"/>
                        <Setter TargetName="dicon" Property="Visibility" Value="Collapsed"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter TargetName="icon" Property="Visibility" Value="Collapsed"/>
                        <Setter TargetName="hicon" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="picon" Property="Visibility" Value="Collapsed"/>
                        <Setter TargetName="dicon" Property="Visibility" Value="Collapsed"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="true">
                        <Setter TargetName="icon" Property="Visibility" Value="Collapsed"/>
                        <Setter TargetName="hicon" Property="Visibility" Value="Collapsed"/>
                        <Setter TargetName="picon" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="dicon" Property="Visibility" Value="Collapsed"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter TargetName="icon" Property="Visibility" Value="Collapsed"/>
                        <Setter TargetName="hicon" Property="Visibility" Value="Collapsed"/>
                        <Setter TargetName="picon" Property="Visibility" Value="Collapsed"/>
                        <Setter TargetName="dicon" Property="Visibility" Value="Visible"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </Style.Resources>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Red"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template" Value="{StaticResource MyImageButton.ContentOpacity}"/>
        <Style.Triggers>
            <Trigger Property="RenderMode" Value="VerticalFour">
                <Setter Property="Template" Value="{StaticResource MyImageButton.VerticalFour}"/>
            </Trigger>
            <Trigger Property="RenderMode" Value="ContentOpacity">
                <Setter Property="Template" Value="{StaticResource MyImageButton.ContentOpacity}"/>
            </Trigger>
            <Trigger Property="RenderMode" Value="HorizonFour">
                <Setter Property="Template" Value="{StaticResource MyImageButton.HorizonFour}"/>
            </Trigger>
            <Trigger Property="RenderMode" Value="Manner">
                <Setter Property="Template" Value="{StaticResource MyImageButton.Manner}"/>
            </Trigger>

        </Style.Triggers>
    </Style>

</ResourceDictionary>